@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Insert the same HTML and JavaScript as provided in the previous answer -->

@model IEnumerable<TestApiPitchOrder.Models.Account>

@{
    ViewData["Title"] = "Account Management";
}

<h2>Account Management</h2>

<div>
    <input type="text" id="searchBox" placeholder="Search by Name" />
    <button onclick="searchAccount()">Search</button>
</div>

<br />

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Phone</th>
            <th>Email</th>
            <th>Password</th>
            <th>Account Type</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="accountTableBody">
        @foreach (var account in Model)
        {
                <tr>
                    <td>@account.Id</td>
                    <td>@account.Name</td>
                    <td>@account.Phone</td>
                    <td>@account.Email</td>
                    <td>@account.Password</td>
                    <td>@account.AccountType</td>
                    <td>
                        <button onclick="editAccount(@account.Id)">Edit</button>
                        <button onclick="deleteAccount(@account.Id)">Delete</button>
                    </td>
                </tr>
        }
    </tbody>
</table>

<br />

<h3>Add New Account</h3>
<form id="addAccountForm">
    <div>
        <label>Name:</label>
        <input type="text" id="name" required />
    </div>
    <div>
        <label>Phone:</label>
        <input type="text" id="phone" required />
    </div>
    <div>
        <label>Email:</label>
        <input type="email" id="email" required />
    </div>
    <div>
        <label>Password:</label>
        <input type="password" id="password" required />
    </div>
    <div>
        <label>Account Type:</label>
        <input type="text" id="accountType" required />
    </div>
    <button type="button" onclick="addAccount()">Add Account</button>
</form>

<script>
    function searchAccount() {
        var name = document.getElementById("searchBox").value;
        fetch(`/api/Account/GetAccountByName/${name}`)
            .then(response => response.json())
            .then(data => {
                var tbody = document.getElementById("accountTableBody");
                tbody.innerHTML = "";
                if (data) {
                    var row = `<tr>
                        <td>${data.id}</td>
                        <td>${data.name}</td>
                        <td>${data.phone}</td>
                        <td>${data.email}</td>
                        <td>${data.password}</td>
                        <td>${data.accountType}</td>
                        <td>
                            <button onclick="editAccount(${data.id})">Edit</button>
                            <button onclick="deleteAccount(${data.id})">Delete</button>
                        </td>
                    </tr>`;
                    tbody.innerHTML += row;
                }
            });
    }

    function addAccount() {
        var name = document.getElementById("name").value;
        var phone = document.getElementById("phone").value;
        var email = document.getElementById("email").value;
        var password = document.getElementById("password").value;
        var accountType = document.getElementById("accountType").value;

        var account = {
            Name: name,
            Phone: phone,
            Email: email,
            Password: password,
            AccountType: accountType
        };

        fetch("/api/Account/AddAccount", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(account)
        })
        .then(response => {
            if (response.status === 201) {
                location.reload();
            }
        });
    }

    function editAccount(id) {
        // Implement edit account logic, which can involve fetching the account details and displaying them in a form for editing.
        // After editing, you would send a PUT request to the API to update the account.
    }

    function deleteAccount(id) {
        if (confirm("Are you sure you want to delete this account?")) {
            fetch(`/api/Account/DeleteAccount/${id}`, {
                method: "DELETE"
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                }
            });
        }
    }
</script>
